
	void SetWindowTitleDelete();

    static int ScreenX = GetSystemMetrics(SM_CXSCREEN);
    static int ScreenY = GetSystemMetrics(SM_CYSCREEN);

    
    WindowHandle = CreateWindowA(_ClassName.data(), _TitleName.data(), WS_OVERLAPPED,
        0, 0, CW_USEDEFAULT, 0, nullptr, nullptr, hInstance, nullptr);
    //WindowHandle = CreateWindowA(_ClassName.data(), 0, WS_OVERLAPPED,
    //    -10, (ScreenY - (ScreenY / 3)), WS_SYSMENU, ScreenY / 3, nullptr, nullptr, hInstance, nullptr);

        
    SetWindowTitleDelete();
	

    RECT Rc = { 0, 0, _Scale.iX(), _Scale.iY() };

    // 이게 그 계산해주는 함수이다.
    // 타이틀바 크기까지 합쳐진 크기로 준다.
    // 윈도우 입장
    // 현재 윈도우의 스타일을 넣어줘야 한다.

    // 그러면 또 이녀석은 
    // 윈도우에서 가져야할 위치를 포함한 크기를 주게 된다.

    AdjustWindowRect(&Rc, WS_OVERLAPPED, FALSE);
    //SetForegroundWindow(WindowHandle);

    ::SetWindowPos(WindowHandle, nullptr, _Pos.iX() - 10, _Pos.iY(), Rc.right - Rc.left, Rc.bottom - Rc.top, SWP_SHOWWINDOW);


void UEngineWindow::SetWindowTitleDelete()
{
    long style = ::GetWindowLongA(WindowHandle, GWL_STYLE);
    style &= ~WS_CAPTION;
    SetWindowLongA(WindowHandle, GWL_STYLE, style);

    //SetWindowRgn(WindowHandle, hRgn, false);
}



	Core.EngineSubWindow.Open();


    
	UEngineWindow& GetSubWindow()
	{
		return EngineSubWindow;
	}


  
	UEngineWindow EngineSubWindow = UEngineWindow(); // 엔진 상단 서브 윈도우