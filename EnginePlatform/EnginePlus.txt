
    WindowHandle = CreateWindowA(_ClassName.data(), _TitleName.data(), WS_OVERLAPPED,
        0, 0, ScreenX, ScreenY, nullptr, nullptr, hInstance, nullptr);

    

void UEngineWindow::SetWindowAlpha()
{
    long style = ::GetWindowLongA(WindowHandle, GWL_STYLE);
    style &= ~WS_CAPTION;
    SetWindowLongA(WindowHandle, GWL_STYLE, style);

    long l = GetWindowLongA(WindowHandle, GWL_EXSTYLE);
    l |= WS_EX_LAYERED;
    SetWindowLongA(WindowHandle, GWL_EXSTYLE, l);
    SetLayeredWindowAttributes(WindowHandle, RGB(172, 9, 172), 0, LWA_COLORKEY);
}

static int ScreenX = GetSystemMetrics(SM_CXSCREEN);
static int ScreenY = GetSystemMetrics(SM_CYSCREEN);

    void SetWindowAlpha();


    
	void CoreOutPutString(std::string_view _Text)
	{
				EngineTextPos.Y += 20;
		DebugTexts.push_back({ _Text.data(), EngineTextPos});